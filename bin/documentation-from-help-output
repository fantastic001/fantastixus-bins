#!/bin/bash

IFS=''

function header() {
    echo "# Automaticaly generated documentation for scripts in $DIR_WITH_SCRIPTS" > $OUTPUT_FILE_NAME
    echo >> $OUTPUT_FILE_NAME
    echo "**Following is a list of scripts with their --help output**" >> $OUTPUT_FILE_NAME
    echo >> $OUTPUT_FILE_NAME
    echo >> $OUTPUT_FILE_NAME
}

function footer() {
    echo >> $OUTPUT_FILE_NAME
    echo >> $OUTPUT_FILE_NAME
    echo "_Generated: "$(date)"_" >> $OUTPUT_FILE_NAME
}

function generated_documentation() {
    for file in "$DIR_WITH_SCRIPTS"/* ; do
        if [[ $file == "./"$execute_file ]]; then
            continue
        fi

        text="$( $file -h )"
        part_of_the_text=$( sed '/^$/q' <<< "$text" ) 
        if [[ -z $part_of_the_text ]]; then
            echo "* $file" >> $OUTPUT_FILE_NAME
            echo "Documentation does not exist" >> $OUTPUT_FILE_NAME
            echo "---" >> $OUTPUT_FILE_NAME

        else
            echo "* $file" >> $OUTPUT_FILE_NAME
            echo $part_of_the_text >> $OUTPUT_FILE_NAME
            echo >> $OUTPUT_FILE_NAME
            echo "---" >> $OUTPUT_FILE_NAME
        fi
    done
}

DIR_WITH_SCRIPTS=""
FUNCTION_NAME=""

while getopts :hp:f: OPTION; do
	case $OPTION in 
		h)
            echo "Usage: documentation-from-help-output [OPTION]... [FILE]..."
            echo "Generates documentation using --help output from scripts"
            echo 
	        echo "If there are no arguments, default options will be used"
	        echo -e "-p \t define path to directory with scripts (dir with this script is default)"
	        echo -e "-f \t define name of function that prints documentation (default is 'print_usage)"
            echo -e "-h \t print this message"
			exit 0
			;;
		
        f)
            DIR_WITH_SCRIPTS=$OPTARG
            ;;
		*)
			echo "Invalid option"
			print_usage
			exit 1
			;;

	esac
done

if [[ -z "$DIR_WITH_SCRIPTS" ]]; then
    DIR_WITH_SCRIPTS="./"
fi

OUTPUT_FILE_NAME="README-.md"

header
generated_documentation
footer

unset IFS