#!/bin/sh

SHORTOPTS=":ho:r:"
LONGOPTS="help,output-file:,resolution:"
OPTS=$(getopt -o $SHORTOPTS --longoptions $LONGOPTS -n "$0" -- "$@")
eval set -- "$OPTS"

while [ $# -gt 0 ]; do
    case $1 in
        -h|--help)
            echo "Usage: record-screen [OPTION]... [FILE]..."
            echo "Script for starting ffmpeg with options optimised for screen recording"
            echo 
            #list of options following
            echo -e "-o, --output-file \t define output file"
			echo -e "-r, --resolution \t define screen resolution (eg. '1920x1080') "
            echo -e "-h, --help \t print this message"
        	exit 0
        ;;

        o|--output-file)
			OUTPUT="$OPTARG"
			;;

		r|--resolution)
			RESOLUTION="$OPTARG"			
			;;

        --)
           shift
           break
        ;;

    esac
    shift
done


OUTPUT=""
RESOLUTION=""

<<<<<<< HEAD
=======
while getopts :ho:r: OPTION; do
	case $OPTION in 
		h)
			print_usage
			exit 0
			;;
		o)
			echo "output file"
			OUTPUT="$OPTARG"
			echo $o
			;;
		r)
			RESOLUTION="$OPTARG"
			echo "resolution"
			echo $r
			;;
		
		*)
			echo "Invalid option"
			print_usage
			exit 1
			;;

	esac
done


>>>>>>> ab91b75 (added parameter for record-screen scirpt)
if [[ -z $OUTPUT ]]; then
	OUTPUT=output.mp4
fi

if [[ -z $RESOLUTION ]]; then
	RESOLUTION=$( xrandr | grep '*' | cut -f 4 -d ' ' )
fi

ffmpeg -video_size "$RESOLUTION" -framerate 5 -f x11grab -i :0.0+0.0 -c:v libx264rgb -crf 0 -preset ultrafast -color_range 2 "$OUTPUT"

exit 0